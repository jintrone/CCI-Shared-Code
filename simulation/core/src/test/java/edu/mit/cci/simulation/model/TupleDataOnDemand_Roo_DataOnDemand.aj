// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.mit.cci.simulation.model;

import edu.mit.cci.simulation.model.VariableDataOnDemand;
import edu.mit.cci.simulation.model.Tuple;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect TupleDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TupleDataOnDemand: @Component;
    
    private Random TupleDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Tuple> TupleDataOnDemand.data;
    
    @Autowired
    private VariableDataOnDemand TupleDataOnDemand.defaultVariableDataOnDemand;
    
    public Tuple TupleDataOnDemand.getSpecificTuple(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Tuple obj = data.get(index);
        return Tuple.findTuple(obj.getId());
    }
    
    public Tuple TupleDataOnDemand.getRandomTuple() {
        init();
        Tuple obj = data.get(rnd.nextInt(data.size()));
        return Tuple.findTuple(obj.getId());
    }
    
    public boolean TupleDataOnDemand.modifyTuple(Tuple obj) {
        return false;
    }
    
    public void TupleDataOnDemand.init() {
        data = edu.mit.cci.simulation.model.Tuple.findTupleEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Tuple' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<edu.mit.cci.simulation.model.Tuple>();
        for (int i = 0; i < 10; i++) {
            edu.mit.cci.simulation.model.Tuple obj = getNewTransientTuple(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
