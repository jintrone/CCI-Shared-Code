// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.mit.cci.simulation.model;

import edu.mit.cci.simulation.model.DefaultVariable;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect VariableDataOnDemand_Roo_DataOnDemand {
    
    declare @type: VariableDataOnDemand: @Component;
    
    private Random VariableDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<DefaultVariable> VariableDataOnDemand.data;
    
    public DefaultVariable VariableDataOnDemand.getNewTransientDefaultVariable(int index) {
        edu.mit.cci.simulation.model.DefaultVariable obj = new edu.mit.cci.simulation.model.DefaultVariable();
        obj.setName(null);
        obj.setDescription(null);
        obj.setArity(new Integer(index));
        obj.setDataType(null);
        obj.setPrecision_(null);
        obj.setMax_(null);
        obj.setMin_(null);
        obj.setExternalName(null);
        obj.set_optionsRaw("_optionsRaw_" + index);
        obj.setIndexingVariable(null);
        return obj;
    }
    
    public DefaultVariable VariableDataOnDemand.getSpecificDefaultVariable(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        DefaultVariable obj = data.get(index);
        return DefaultVariable.findDefaultVariable(obj.getId());
    }
    
    public DefaultVariable VariableDataOnDemand.getRandomDefaultVariable() {
        init();
        DefaultVariable obj = data.get(rnd.nextInt(data.size()));
        return DefaultVariable.findDefaultVariable(obj.getId());
    }
    
    public boolean VariableDataOnDemand.modifyDefaultVariable(DefaultVariable obj) {
        return false;
    }
    
    public void VariableDataOnDemand.init() {
        data = edu.mit.cci.simulation.model.DefaultVariable.findDefaultVariableEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'DefaultVariable' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<edu.mit.cci.simulation.model.DefaultVariable>();
        for (int i = 0; i < 10; i++) {
            edu.mit.cci.simulation.model.DefaultVariable obj = getNewTransientDefaultVariable(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
